{
    "openapi": "3.0.0",
    "info": {
        "title": "Identity Manager Using Vault",
        "description": "Provide a identity manager to this application.Rather then writing a custom identity management logic this application uses vault server\nEach Client is represented as entity in vault with capabilities to \n1.Manage one transit key\n2.Store secrets",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:9000/api/v1/im"
        }
    ],
    "tags": [
        {
            "name" : "Identity"
        },
        {
            "name" : "Token"
        },
        {
            "name": "Secrets"
        },
        {
            "name": "Key"
        }
    ],
    "security": [
        {
            "vaultToken" : []
        }
    ],
    "components": {
        "securitySchemes": {
            "vaultToken" : {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "identityCredentials" : {
                "type": "object",
                "required": ["username","password"],
                "properties": {
                    "username" : {
                        "type": "string"
                    },
                    "password" : {
                        "type": "string"
                    }
                }
            },
            "tokenDetails" : {
                "type": "object",
                "required": ["username","issue_time","expire_time"],
                "properties": {
                    "username"  :{
                      "type": "string",
                      "example": "client1"
                    },
                    "issue_time" : {
                        "type": "string",
                        "example": "2021-09-11T08:58:20.320828453Z"
                    },
                    "expire_time" : {
                        "type": "string",
                        "example" : "2021-10-13T08:58:20.320806078Z"
                    }
                }
            },
            "secrets" : {
                "type": "array",
                "example" : [
                    {
                        "key" : "FABRIC_ENROLLMENT_SECRET",
                        "value" : "secret"
                    }
                ],
                "items": {
                    "type": "object",
                    "required": ["key","value"],
                    "properties": {
                        "key" : {
                            "type": "string"
                        },
                        "value"  : {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/identity" : {
            "post" : {
                "tags": ["Identity"],
                "description": "Creates a new client/manager Identity",
                "summary": "Creates a new client/manager Identity",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "client1"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "description": "Type of identity to be created",
                        "schema": {
                            "type": "string",
                            "default": "CLIENT",
                            "enum": [
                                "MANAGER",
                                "CLIENT"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201" : {
                        "description": "Identity Created",
                        "content": {
                            "application/json" : {
                                "schema":{
                                    "$ref" : "#/components/schemas/identityCredentials"
                                }
                            }
                        }
                    }
                }
            },
            "patch" : {
                "tags": ["Identity"],
                "summary": "Update Identity Password",
                "description": "Update Identity Password",
                "parameters": [
                    {
                        "name": "new_password",
                        "required": true,
                        "in": "header",
                        "schema":{
                            "type": "string",
                            "default": "pw"
                        }
                    }
                ],
                "responses": {
                    "204" : {
                        "description": "Identity Password Updated"
                    }
                }
            }
        },
        "/token" : {
            "post" : {
                "tags": ["Token"],
                "description": "Generate new Token using vault credentials",
                "summary": "Generate new Token using vault credentials",
                "security": [],
                "parameters": [
                    {
                        "name": "username",
                        "required": true,
                        "in": "header",
                        "schema":{
                            "type": "string",
                            "example" : "client1"
                        }
                    },
                    {
                        "name": "password",
                        "required": true,
                        "in": "header",
                        "schema" : {
                            "type": "string",
                            "example": "pw"
                        }
                    }
                ],
                "responses": {
                    "200" : {
                        "description": "Vault Token",
                        "content": {
                            "application/json" : {
                                "schema" : {
                                    "type": "object",
                                    "required": ["token"],
                                    "properties": {
                                        "token" : {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch" : {
                "tags": ["Token"],
                "description": "Extend TTL of Token",
                "summary": "Extend TTL of Token",
                "responses": {
                    "200" : {
                        "description": "Token Renewed"
                    }
                }
            },
            "get" : {
                "tags": ["Token"],
                "description": "Get Token Details",
                "summary": "Get Token Details",
                "responses": {
                    "200" : {
                        "description": "Token Details",
                        "content": {
                            "application/json" : {
                                "schema":{
                                "$ref" : "#/components/schemas/tokenDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete" : {
                "tags": ["Token"],
                "description": "Revoke used token",
                "summary": "Revoke used token",
                "responses": {
                    "204" : {
                        "description": "Token Revoked"
                    }
                }
            }
        },
        "/secrets" : {
            "get" : {
                "tags": ["Secrets"],
                "description": "Return All The secrets stored by a client",
                "summary": "Return All the secrets stored by a client",
                "responses": {
                    "200" : {
                        "description": "Client's Secrets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref" : "#/components/schemas/secrets"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/key":{
            "post" : {
                "description": "Create a Transit Key",
                "summary" : "Create a Transit Key",
                "tags": ["Key"],
                "parameters": [
                    {
                        "name": "kty",
                        "description": "Key Type",
                        "in": "query",
                        "required": true,
                        "schema":{
                            "type": "string",
                            "enum": [
                                "ecdsa-p256",
                                "ecdsa-p384"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201" : {
                        "description": "EC Transit Key Created"
                    }
                }
            }
        }
    }
}